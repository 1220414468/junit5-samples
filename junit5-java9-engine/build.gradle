buildscript {
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath 'org.junit.platform:junit-platform-gradle-plugin:1.1.0-RC1'
	}
}

apply plugin: 'java'
apply plugin: 'org.junit.platform.gradle.plugin'

repositories {
	mavenCentral()
}

dependencies {
	// We implement the `TestEngine` interface.
	compile('org.junit.platform:junit-platform-engine:1.1.0-RC1')

	// We use Jupiter API in our test implementations.
	testCompile('org.junit.jupiter:junit-jupiter-api:5.1.0-RC1')

	// Needed to run JUnit Jupiter tests.
	testRuntime('org.junit.jupiter:junit-jupiter-engine:5.1.0-RC1')

	// Needed to run JUnit Platform on the console.
	testRuntime('org.junit.platform:junit-platform-console:1.1.0-RC1')
}

//
// Define global properties.
//
ext.moduleName = 'ice.cream'

//
// Use module-path and module-version options of javac 9.
//
compileJava {
	options.compilerArgs = [
			'--module-path', classpath.asPath,
			'--module-version', '47.11'
	]
	classpath = files()
}

//
// Use module-path and patch-module options of javac 9.
//
compileTestJava {
	inputs.property("moduleName", moduleName)
	options.compilerArgs = [
			'--module-path', classpath.asPath,
			'--module-version', '47.11',
			'--patch-module', "$moduleName=" + files(sourceSets.main.java.srcDirs).asPath
	]
	classpath = files()
}

//
// Execute console launcher on the module-path.
//
task testIceCreamMachine(type: Exec, dependsOn: compileTestJava) {
	executable = 'java'
	args = [
			'-Dscoops=' + System.getProperty('scoops', '3'),
			'--module-path', files(configurations.testRuntimeClasspath, compileTestJava.destinationDir).asPath,
			'--add-modules', 'ALL-MODULE-PATH',
			'--module', 'org.junit.platform.console',
			'--scan-modules',
			'--reports-dir', "${buildDir}/test-results/junit-platform"
	]
}

check.dependsOn testIceCreamMachine

//
// Use JUnitPlatform Gradle Plugin in module-path mode.
//
junitPlatform {
	modulepath = files(configurations.testRuntimeClasspath, compileTestJava.destinationDir)
	details 'tree'
}

task wrapper(type: Wrapper) {
	description = 'Generates gradlew[.bat] scripts'
	gradleVersion = '4.4.1'
}
