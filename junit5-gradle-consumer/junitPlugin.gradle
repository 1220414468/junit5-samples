class JUnit5Plugin implements Plugin<Project> {
	void apply(Project project) {
		def junit5 = project.extensions.create('junit5', JUnit5Extension)
		project.afterEvaluate {

			def junit5Version = junit5.version
			project.dependencies.add("testCompile", "org.junit.prototype:junit5-api:${junit5Version}")
			project.dependencies.add("testRuntime", "org.junit.prototype:junit-console:${junit5Version}")
			project.dependencies.add("testRuntime", "org.junit.prototype:junit5-engine:${junit5Version}")

			if (junit5.runJunit4) {
				project.dependencies.add("testRuntime", "org.junit.prototype:junit4-engine:${junit5Version}")
			}

			project.task('test', type: org.gradle.api.tasks.JavaExec, overwrite: true) { task->
				//				def classpathRoots = project.sourceSets.test.runtimeClasspath.files
				//				classpathRoots.each {
				//					println "ROOT: " + it
				//				}
				task.description = 'Runs JUnit 5 tests.'
				task.classpath = project.sourceSets.test.runtimeClasspath
				task.main = 'org.junit.gen5.console.ConsoleRunner'
				task.args '--enable-exit-code', '--all'
			}
		}
	}
}

class JUnit5Extension {
	String version
	boolean runJunit4
}

ext.junit5 = JUnit5Plugin

